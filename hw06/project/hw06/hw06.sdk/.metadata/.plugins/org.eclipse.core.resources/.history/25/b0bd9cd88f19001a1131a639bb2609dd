/*
 * main.c
 *
 *  Created on: 2019年11月28日
 *      Author: 李奕勳
 */
#include <stdio.h>
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"
#include "controller.h"
void write_data(u32 address,u32 data);
u32 read_data(u32 address);

int main()
{
	int done;
	u32 data_in;
	u32 data1,data2,data3,data4;
	u32 filter1,filter2,filter3,filter4;
	u32 result;
	u32 a1,a2,a3,a4,b1,b2,b3,b4;
	u32 bias;
	u32 temp1;
	u32 temp2;
	printf("program starts\n");
	done=0;
	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 8,0x00000000);//data not ready
	//////////////////////////////input data////////////////////////////////
	printf("input data1(0~7):");
	while(scanf("%d",&data1))
	{
		if(data1<0||data1>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input data1 again(0~7):");
			continue;
		}
		else
			break;
	}
	printf("%d",data1);
	printf("\n");
	printf("input data2:(0~7):");
	while(scanf("%d",&data2))
	{
		if(data2<0||data2>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input data2 again(0~7):");
			continue;
		}
		else
			break;
	}

	printf("%d",data2);
	printf("\n");
	printf("input data3:(0~7):");
	while(scanf("%d",&data3))
	{
		if(data3<0||data3>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input data3 again(0~7):");
			continue;
		}
		else
			break;
	}

	printf("%d",data3);
	printf("\n");
	printf("input data4:(0~7):");
	while(scanf("%d",&data4))
	{
		if(data4<0||data4>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input data4 again(0~7):");
			continue;
		}
		else
			break;
	}

	printf("%d",data4);
	printf("\n");
	////////////////////////////////////////////////////////////////////////
	//////////////////////////////input filter////////////////////////////////
	printf("input filter1:(0~7):");
	while(scanf("%d",&filter1))
	{
		if(filter1<0||filter1>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input filter1 again(0~7):");
			continue;
		}
		else
			break;
	}
	printf("%d",filter1);
	printf("\n");
	printf("input filter2:(0~7):");
	while(scanf("%d",&filter2))
	{
		if(filter2<0||filter2>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input filter2 again(0~7):");
			continue;
		}
		else
			break;
	}

	printf("%d",filter2);
	printf("\n");
	printf("input filter3:(0~7):");
	while(scanf("%d",&filter3))
	{
		if(filter3<0||filter3>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input filter3 again(0~7):");
			continue;
		}
		else
			break;
	}

	printf("%d",filter3);
	printf("\n");
	printf("input filter4:(0~7):");
	while(scanf("%d",&filter4))
	{
		if(filter4<0||filter4>7)//invalid input
		{
			printf("\n");
			printf("input invalid!please input filter4 again(0~7):");
			continue;
		}
		else
			break;
	}
	printf("%d",filter4);
	printf("\n");
	////////////////////////////////////////////////////////////////////////
	data_in=(data1<<12)+(data2<<8)+(data3<<4)+data4+(filter1<<28)+(filter2<<24)+(filter3<<20)+(filter4<<16);
	//data_in=0x21431233;//input range:0~3
	////////////////////////////input bias//////////////////////
	printf("input bias:(0~10)");
	while(scanf("%d",&bias))
		{
			if(bias<0||bias>10)//invalid input
			{
				printf("\n");
				printf("input invalid!please input bias again(0~10):");
				continue;
			}
			else
				break;
		}

	printf("%d",bias);
	write_data(0x000000ff,data_in);//input data
	write_data(0x000000fe,bias);//bias
	write_data(0x000000fd,0x00000001);//instruction
	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 8, 0x00000001); //data ready

	while(!done)
	{
		u32 done_pl;
		u32 ans;
		done_pl=read_data(0x00000004);
		if(done_pl==0x00000001)
		{
			done=1;
		}
	}
	result=read_data(0x00000000);
	a1=(data_in&0xf0000000)>>28;
	a2=(data_in&0x0f000000)>>24;
	a3=(data_in&0x00f00000)>>20;
	a4=(data_in&0x000f0000)>>16;
	b1=(data_in&0x0000f000)>>12;
	b2=(data_in&0x00000f00)>>8;
	b3=(data_in&0x000000f0)>>4;
	b4=(data_in&0x0000000f)>>0;
	printf("input data:\n");
	printf("%d",b1);
	printf("  %d",b2 );
	printf("\n");
	printf("%d",b3);
	printf("  %d",b4);
	printf("\n");
	printf("filter:\n");
	printf("%d",a1);
	printf("  %d",a2 );
	printf("\n");
	printf("%d",a3);
	printf("  %d",a4);
	printf("\n");
	printf("bias:");
	printf(" %d",bias);
	printf("\n");
	printf("-----------------after processing-----------------\n");
	////////////////////////////////////////////////////////////////////////////////////////////
	printf("output pixel:\n");
	a1=(result&0xff000000)>>24;
	a2=(result&0x00ff0000)>>16;
	a3=(result&0x0000ff00)>>8;
	a4=(result&0x000000ff);
	printf("%d",a1);
	printf("  %d",a2 );
	printf("\n");
	printf("%d",a3);
	printf("  %d",a4);
	printf("\n\n");
	printf("program ends");
}
void write_data(u32 address,u32 data)
{
	u32 ans;
	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 0x00000000, data);
	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 0x00000004, address);

	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 0x0000000C, 0x00000003);//write_enable=1,cmd_valid=1
	CONTROLLER_mWriteReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 0x0000000C, 0x00000001);//write_enable=1,cmd_valid=0
	ans=0x00000000;
	while(ans!=0x00000001)
	{

		ans=CONTROLLER_mReadReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, 0x00000008);

	}
}

u32 read_data(u32 address)
{
	u32 ans;
	ans=CONTROLLER_mReadReg(XPAR_CONTROLLER_0_S00_AXI_BASEADDR, address);
	return ans;
}

