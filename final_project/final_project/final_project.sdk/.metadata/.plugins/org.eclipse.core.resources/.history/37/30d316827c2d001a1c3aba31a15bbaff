/*
 * main.c
 *
 *  Created on: 2020¦~1¤ë2¤é
 *      Author: user
 */

#include <stdio.h>
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"
#include "AES_encrypt.h"
#include "AES_decrypt.h"

int main()
{
	u32 plaintext1,plaintext2,plaintext3,plaintext4;
	u32 key1,key2,key3,key4;
	u32 ready=0;
	u32 cipher1,cipher2,cipher3,cipher4;
	u32 a1,a2,a3,a4;
	printf("Program Start.\n");
	printf("Please input plaintext(32 bits, numbers or letters)\n");
	printf("Pleast input 8bit at a time \n");
	printf("first 8 bits:");
		scanf("%x", &plaintext1);
		printf("%x\r\n", plaintext1);
	/*while(scanf("%x", &plaintext1))
				{
					if(plaintext1>)
					{
						printf("invalid input,please input again!\n");
						printf("Input data8 (0~15):");
					}
					else break;
				}*/
	printf("next 8 bits:");
		scanf("%x", &plaintext2);
		printf("%x\r\n", plaintext2);
	printf("next 8 bits:");
		scanf("%x", &plaintext3);
		printf("%x\r\n", plaintext3);
	printf("last 8 bits:");
		scanf("%x", &plaintext4);
		printf("%x\r\n", plaintext4);
	printf("Please input initial key(32 bits, numbers or letters)\n");
	printf("Pleast input 8bit at a time \n");
	printf("first 8 bits:");
		scanf("%x", &key1);
		printf("%x\r\n", key1);
	printf("next 8 bits:");
		scanf("%x", &key2);
		printf("%x\r\n", key2);
	printf("next 8 bits:");
		scanf("%x", &key3);
		printf("%x\r\n", key3);
	printf("last 8 bits:");
		scanf("%x", &key4);
		printf("%x\r\n", key4);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 4, plaintext1);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 8, plaintext2);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 12, plaintext3);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 16, plaintext4);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 20, key1);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 24, key2);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 28, key3);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 32, key4);
	for(int i=0;i<10;i++);
	AES_ENCRYPT_mWriteReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR, 0, 1); //rst=1

	while(ready!=1){
		ready=AES_ENCRYPT_mReadReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR , 0);
	}
	cipher1=AES_ENCRYPT_mReadReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR , 4);
	cipher2=AES_ENCRYPT_mReadReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR , 8);
	cipher3=AES_ENCRYPT_mReadReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR , 12);
	cipher4=AES_ENCRYPT_mReadReg(XPAR_AES_ENCRYPT_0_S00_AXI_BASEADDR , 16);
	printf("cipher after encryption:\n");
	printf("%x", cipher1);
	printf("%x", cipher2);
	printf("%x", cipher3);
	printf("%x\n", cipher4);
	//-------------
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 4, cipher1);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 8, cipher2);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 12,cipher3);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 16,cipher4);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 20, key1);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 24, key2);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 28, key3);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 32, key4);
		for(int i=0;i<10;i++);
		AES_DECRYPT_mWriteReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR, 0, 1); //rst=1
		ready=0;
		while(ready!=1){
			ready=AES_DECRYPT_mReadReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR , 0);
		}
		a1=AES_DECRYPT_mReadReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR , 4);
		a2=AES_DECRYPT_mReadReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR , 8);
		a3=AES_DECRYPT_mReadReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR , 12);
		a4=AES_DECRYPT_mReadReg(XPAR_AES_DECRYPT_0_S00_AXI_BASEADDR , 16);
		printf("plaintext after decryption:\n");
		printf("%x", a1);
		printf("%x", a2);
		printf("%x", a3);
		printf("%x", a4);

	return 0;
}
